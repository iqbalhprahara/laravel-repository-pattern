services:
    app:
        image: peasy-assignment
        build:
            context: ./docker/app/
            target: devcontainer
            args:
                APP_ENV: ${APP_ENV}
                WWWUSER: ${UID}
                WWWGROUP: ${GID}
        restart: unless-stopped
        tty: true
        environment:
            TZ: ${APP_TIMEZONE}
        user: developer
        working_dir: /var/www/html/
        ports:
            - "${APP_HOST_PORT:-80}:80"
            - "${VITE_PORT:-4000}:4000"
        networks:
            - backend
        volumes:
            - ./:/var/www/html
        entrypoint: ["pm2-runtime", "process.yml"]
        depends_on:
            - redis
            - pgsql
        healthcheck:
            test: ["CMD", "php", "artisan", "octane:status"]
            interval: 1m
            timeout: 30s
            retries: 5
            start_period: 30s
        logging:
            driver: "json-file"
            options:
                max-size: "100m"
                max-file: "5"

    redis:
        image: "redis:alpine"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        volumes:
            - "storage-redis:/data"
        networks:
            - backend
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    pgsql:
        image: "postgres:16"
        ports:
            - "${FORWARD_DB_PORT:-5432}:5432"
        environment:
            PGPASSWORD: "${DB_PASSWORD:-rahasia}"
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD:-rahasia}"
        volumes:
            - storage-pgsql:/var/lib/postgresql/data
            - ./docker/pgsql/create-database.sh:/docker-entrypoint-initdb.d/10-create-database.sh"
        networks:
            - backend
        healthcheck:
            test:
                - CMD
                - pg_isready
                - "-q"
                - "-d"
                - "${DB_DATABASE}"
                - "-U"
                - "${DB_USERNAME}"
            retries: 3
            timeout: 5s

networks:
    backend:
        driver: bridge

volumes:
    storage-redis:
    storage-pgsql:
